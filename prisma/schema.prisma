// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id          String           @id @default(cuid())
  name        String
  description String?
  image       String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  components  Component[]
  Addons      AddOn[]
  categories  Category[]
  price       Float            @default(999999)
  orders      ProductOnOrder[]
}

model AddOn {
  id          String         @id @default(cuid())
  name        String
  description String?
  price       Float          @default(999999)
  image       String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  products    Product[]
  orders      AddonOnOrder[]
}

model Category {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Component {
  id          String                 @id @default(cuid())
  name        String
  description String?
  image       String?
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
  productId   String
  product     Product                @relation(fields: [productId], references: [id])
  materials   MaterialsOnComponent[]
}

model Order {
  id        String           @id @default(cuid())
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  user      User             @relation(fields: [userId], references: [id])
  products  ProductOnOrder[]
  addons    AddonOnOrder[]
  userId    String
  subtotal  Float            @default(0)
  discount  Decimal?

  @@index([userId])
}

model Material {
  id                   String                 @id @default(cuid())
  name                 String
  description          String?
  hexColor             String?
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  MaterialsOnComponent MaterialsOnComponent[]
}

model MaterialsOnComponent {
  material    Material  @relation(fields: [materialId], references: [id])
  component   Component @relation(fields: [componentId], references: [id])
  name        String    
  price       Float     @default(999999)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  materialId  String
  componentId String
  discount    Decimal?  @default(0)

  @@id([materialId, componentId])
}

model ProductOnOrder {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  orderId   String
  productId String
  quantity  Int

  @@id([orderId, productId])
}

model AddonOnOrder {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id])
  addon     AddOn    @relation(fields: [addonId], references: [id])
  orderId   String
  addonId   String
  quantity  Int

  @@id([orderId, addonId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  orders        Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
